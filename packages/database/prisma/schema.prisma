generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Fund {
  // the funds contract id
  id          String     @id @map("_id")
  name        String
  description String
  // In atto alph format
  // BigInt doesn't work for numbers greater than JS number
  // Decimal128 not currently supported, String is the
  // recommended type currently
  goal        String
  deadline    DateTime
  beneficiary String
  organizer   String
  donations   Donation[]
  balances    Balance[]
  // we eagerly create the fund before verifying the transaction actually exists
  // to provide a smooth ui when users are creating a new fund
  // if verified is false we have not actually seen the fund on the network yet
  // if it is true, we have seen the fund and it is legit
  verified    Boolean
  finalized   Boolean    @default(false)
  finalizedBy String?
  txId        String
  // TODO get timestamp from blockchain?
  createdAt   DateTime   @default(now())
  confirmed   Boolean    @default(false)
}

model Balance {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  tokenId String
  balance String
  Fund    Fund   @relation(fields: [fundId], references: [id])
  fundId  String

  @@unique([tokenId, fundId])
}

model Donation {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  donor   String
  tokenId String
  amount  String
  Fund    Fund   @relation(fields: [fundId], references: [id])
  fundId  String
}

model Indexer {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  height Int    @default(0)
}
